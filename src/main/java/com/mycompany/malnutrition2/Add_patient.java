/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.malnutrition2;

import java.beans.PropertyVetoException;
import java.time.Year;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class Add_patient extends javax.swing.JInternalFrame {

    /**
     * Creates new form data_frame
     */
    Vector<Patient> patientList = new Vector<Patient>();
    int selectedRow = -1;

    public Add_patient() {
        initComponents();
        this.moveToFront();
        try {
            this.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(Add_patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        int year = Year.now().getValue();
        for (int i = 1950; i <= year; i++) {
            drop_year.addItem(i + "");
        }
        patientList = FileHandling.read();
        if (patientList != null) {
            for (int i = 0; i < patientList.size(); i++) {
                Patient temp = patientList.get(i);
                get_view().addRow(temp.getVector());
            }

        }
        else
        {
            patientList=new Vector<Patient>();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        input_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_day = new javax.swing.JTextField();
        drop_month = new javax.swing.JComboBox<>();
        drop_year = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        check_preg = new javax.swing.JCheckBox();
        add_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Patient Data - Malnutrition Analysis");
        setAutoscrolls(true);
        setFocusCycleRoot(false);
        setLayer(3);
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1000, 568));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVerifyInputWhenFocusTarget(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Name");

        input_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_nameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Date");

        txt_day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dayActionPerformed(evt);
            }
        });

        drop_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        drop_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop_monthActionPerformed(evt);
            }
        });

        jLabel3.setText("Pregenant Women");

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "DOB", "isPreganant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoscrolls(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(input_name, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_day, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(drop_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(drop_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(add_button)
                                .addGap(18, 18, 18)
                                .addComponent(clear_button)
                                .addGap(18, 18, 18)
                                .addComponent(update)
                                .addGap(18, 18, 18)
                                .addComponent(Delete))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(check_preg))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(input_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drop_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drop_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(check_preg))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_button)
                    .addComponent(clear_button)
                    .addComponent(update)
                    .addComponent(Delete))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_nameActionPerformed

    private void txt_dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dayActionPerformed

    private void drop_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drop_monthActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        // TODO add your handling code here:
        String name = input_name.getText();
        String day = txt_day.getText();
        int month = drop_month.getSelectedIndex() + 1;
        String year = drop_year.getSelectedItem().toString();
        boolean preg = check_preg.isSelected();
        String p = preg + "";
        String date = day + "/" + month + "/" + year;
        //String arr[]={name,date,p};
        Patient pt = new Patient(name, date, preg);
        patientList.add(pt);
        FileHandling.save(patientList);
        get_view().addRow(pt.getVector()); //??
        clear_button.doClick();
    }//GEN-LAST:event_add_buttonActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        selectedRow = jTable1.getSelectedRow();
        String tempName = get_view().getValueAt(selectedRow, 0).toString();
        String tempDate = get_view().getValueAt(selectedRow, 1).toString();
        boolean tempPreg = (boolean) get_view().getValueAt(selectedRow, 2);
        input_name.setText(tempName);
        String arr[] = tempDate.split("/");
        txt_day.setText(arr[0]);
        int month = Integer.parseInt(arr[1]) - 1;
        drop_month.setSelectedIndex(month);
        drop_year.setSelectedItem(arr[2]);
        check_preg.setSelected(tempPreg);
    }//GEN-LAST:event_jTable1MouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        get_view().removeRow(selectedRow);
        patientList.remove(selectedRow);
        FileHandling.save(patientList);
    }//GEN-LAST:event_DeleteActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        // TODO add your handling code here:
        clear_func();
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String t = input_name.getText();
        String day = txt_day.getText();
        int month = drop_month.getSelectedIndex() + 1;
        String year = drop_year.getSelectedItem().toString();
        String date = day + "/" + month + "/" + year;
        boolean preg = check_preg.isSelected();
        String p = preg + "";
        get_view().setValueAt(t, selectedRow, 0);
        get_view().setValueAt(date, selectedRow, 1);
        get_view().setValueAt(preg, selectedRow, 2);
        
        Patient temp=patientList.get(selectedRow); //??
        temp.setName(t);
        temp.setDate(date);
        temp.setIsPreg(preg);
        FileHandling.save(patientList);
    }//GEN-LAST:event_updateActionPerformed
    public void clear_func() {
        input_name.setText("");
        txt_day.setText("");
        drop_month.setSelectedIndex(0);
        drop_year.setSelectedIndex(0);
        check_preg.setSelected(false);
    }

    public DefaultTableModel get_view() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        return dtm;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton add_button;
    private javax.swing.JCheckBox check_preg;
    private javax.swing.JButton clear_button;
    private javax.swing.JComboBox<String> drop_month;
    private javax.swing.JComboBox<String> drop_year;
    private javax.swing.JTextField input_name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_day;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
